#!/usr/bin/env bash

# rebase current branch to another (default develop)
rebase () {

 rebaseBranch=${1:-"develop"}
 currentBranch=`git symbolic-ref --short -q HEAD`
 if [ `git status --porcelain 2>/dev/null| egrep "^(M| M)" | wc -l` -ne 0 ]; then
   dirty=true
 else
   dirty=false
 fi

 echo "##### Rebase branch ${currentBranch} -> ${rebaseBranch} with dirty:${dirty}"

 if [ "$dirty" = true ]; then
   echo "##### Stash modifications"
   git stash
 fi

 echo  "#### Update develop"
 git checkout $rebaseBranch
 git pull --rebase

 echo  "#### Rebase"
 git co $currentBranch
 git rebase -i $rebaseBranch

 read -p "Force push rebase result to origin (y/n)?" -n 1 -r
 echo    # (optional) move to a new line
 if [[ $REPLY =~ ^[Yy]$ ]] ;then
   if [[ "$currentBranch" -eq "develop" || "$currentBranch" -eq "master" ]] ;then
     echo "FORCE PUSH TO MASTER OR DEVELOP BRANCHES NOT ALLOWED"
   else
     git push -f origin $currentBranch
   fi
 fi

 if [ "$dirty" = true ]; then
   echo  "#### Re-apply modifications"
   git stash pop
 fi
}


# ex - archive extractor
# usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
